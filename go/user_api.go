/*
 * star world API
 *
 * the api to query the information about *Star War* you can check all the Star Wars data you've ever wanted Planets Spaceships Vehicles People Films and Species From all SEVEN Star Wars films
 *
 * API version: 0.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"net/http"

	"github.com/boltdb/bolt"
)

var db *bolt.DB

func init() {
	var err error
	db, err = bolt.Open("db/user.db", 0600, nil)
}

func UserLogoutPost(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.WriteHeader(http.StatusOK)

	// TODO
}

func UserSignInPost(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.WriteHeader(http.StatusOK)

	var user UserSignIn
	var b []byte
	var err error
	b, err = ioutil.ReadAll(r.Body)
	if err != nil {
		fmt.Println(err)
	}
	err = json.Unmarshal(b, &user)
	if err != nil {
		fmt.Println(err)
	}

	// TODO
	fmt.Println(user.Username)
	fmt.Println(user.Password)
}

func UserSignUpPost(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.WriteHeader(http.StatusOK)

	var user UserNew
	var b []byte
	var err error
	b, err = ioutil.ReadAll(r.Body)
	if err != nil {
		fmt.Println(err)
	}
	err = json.Unmarshal(b, &user)
	if err != nil {
		fmt.Println(err)
	}

	// TODO
	fmt.Println(user.Username)
	fmt.Println(user.Password)
	fmt.Println(user.Email)
}

func UserUpdatePost(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.WriteHeader(http.StatusOK)

	var user UserUpdate
	var b []byte
	var err error
	b, err = ioutil.ReadAll(r.Body)
	if err != nil {
		fmt.Println(err)
	}
	err = json.Unmarshal(b, &user)
	if err != nil {
		fmt.Println(err)
	}

	// TODO
	fmt.Println(user.Username)
	fmt.Println(user.Password)
	fmt.Println(user.OldPassword)
	fmt.Println(user.Email)

}
